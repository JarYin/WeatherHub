generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String      @id @default(uuid())
  email      String      @unique
  password   String
  createdAt  DateTime    @default(now())
}

model Location {
  id         String          @id @default(uuid())
  name       String
  lat        Float
  lon        Float
  timezone   String
  isActive   Boolean         @default(true)
  createdAt  DateTime        @default(now())
  weather    Weather[]
  summary    DailySummary[]
  ingestJobs IngestJob[]
}

model Weather {
  id           String      @id @default(uuid())
  locationId   String
  timestamp    DateTime
  temp_c       Float
  humidity     Float
  wind_ms      Float
  rain_mm      Float
  condition    Int
  createdAt    DateTime     @default(now())
  ingestSource String?
  ingestJobId  String?

  location     Location     @relation(fields: [locationId], references: [id], onDelete: Cascade)

  @@unique([locationId, timestamp])  // กันข้อมูลซ้ำในแต่ละ location+time
  @@index([timestamp])
}

model DailySummary {
  id          String      @id @default(uuid())
  locationId  String
  date        DateTime
  temp_min    Float
  temp_max    Float
  rain_total  Float
  wind_max    Float
  createdAt   DateTime    @default(now())

  location    Location    @relation(fields: [locationId], references: [id], onDelete: Cascade)

  @@unique([locationId, date])       // สรุปต่อวันไม่ซ้ำ
  @@index([date])
}

model IngestJob {
  id          String      @id @default(uuid())
  locationId  String
  startedAt   DateTime?
  endedAt     DateTime?
  status      String?
  note        String?

  location    Location?   @relation(fields: [locationId], references: [id])
}